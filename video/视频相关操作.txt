src ：视频的属性，url地址
poster：视频封面，没有播放时显示的图片
preload：预加载|none|metadata（部分预加载）|auto。默认为auto
autoplay：自动播放
loop：循环播放
controls：浏览器自带的控制条
width：视频宽度
height：视频高度
其中： src地址可控制播放区域（调取native播放器（qq,uc等浏览器）的除外）
【示例】 http://xxxx.com/video.mp4#t=10,20   表示播放范围10s-20s;
t=,02:00:00 从开始到两小时;t=60 从60s开始;t=,10.5 开始到10.5s


【媒体错误】
ccMediaObj.error; //null:正常
ccMediaObj.error.code; //1.用户终止 2.网络错误 3.解码错误 4.URL无效
【媒体当前状态】
ccMediaObj.currentSrc; //返回当前资源的URL
ccMediaObj.src = value; //返回或设置当前资源的URL
ccMediaObj.canPlayType(type); //是否能播放某种格式的资源
ccMediaObj.networkState; //0.此元素未初始化 1.正常但没有使用网络 2.正在下载数据 3.没有找到资源
ccMediaObj.load(); //重新加载src指定的资源
ccMediaObj.buffered; //返回已缓冲区域，TimeRanges
ccMediaObj.preload; //none:不预载 metadata:预载资源信息 auto:
【准备状态】
ccMediaObj.readyState;
    1:HAVE_NOTHING
    2:HAVE_METADATA
    3.HAVE_CURRENT_DATA
    4.HAVE_FUTURE_DATA
    5.HAVE_ENOUGH_DATA

ccMediaObj.seeking; //是否正在seeking</p> <p>
【回放状态】
ccMediaObj.currentTime = value; //当前播放的位置，赋值可改变位置
ccMediaObj.startTime; //一般为0，如果为流媒体或者不从0开始的资源，则不为0
ccMediaObj.duration; //当前资源长度 流返回无限
ccMediaObj.paused; //是否暂停
ccMediaObj.defaultPlaybackRate = value;//默认的回放速度，可以设置
ccMediaObj.playbackRate = value;//当前播放速度，设置后马上改变
ccMediaObj.played; //返回已经播放的区域，TimeRanges，关于此对象见下文
ccMediaObj.seekable; //返回可以seek的区域 TimeRanges
ccMediaObj.ended; //是否结束
ccMediaObj.autoPlay; //是否自动播放
ccMediaObj.loop; //是否循环播放
ccMediaObj.play(); //播放
ccMediaObj.pause(); //暂停
【视频控制】
ccMediaObj.controls;//是否有默认控制条
ccMediaObj.volume = value; //音量
ccMediaObj.muted = value; //静音

【TimeRanges(区域)对象】
TimeRanges.length; //区域段数
TimeRanges.start(index) //第index段区域的开始位置
TimeRanges.end(index) //第index段区域的结束位置

【★★★**相关事件**★★★】
//事件分发
var eventTester = function(e){
    Media.addEventListener(e,function(){
        console.log((new Date()).getTime(),e)
    },false);
}
//事件监听
eventTester("loadstart"); //客户端开始请求数据
eventTester("progress"); //客户端正在请求数据
eventTester("suspend"); //延迟下载
eventTester("abort"); //客户端主动终止下载（不是因为错误引起）
eventTester("loadstart"); //客户端开始请求数据
eventTester("progress"); //客户端正在请求数据
eventTester("suspend"); //延迟下载
eventTester("abort"); //客户端主动终止下载（不是因为错误引起），
eventTester("error"); //请求数据时遇到错误
eventTester("stalled"); //网速失速
eventTester("play"); //play()和autoplay开始播放时触发
eventTester("pause"); //pause()触发
eventTester("loadedmetadata"); //成功获取资源长度
eventTester("loadeddata"); //
eventTester("waiting"); //等待数据，并非错误
eventTester("playing"); //开始回放
eventTester("canplay"); //可以播放，但中途可能因为加载而暂停
eventTester("canplaythrough"); //可以播放，歌曲全部加载完毕
eventTester("seeking"); //寻找中
eventTester("seeked"); //寻找完毕
eventTester("timeupdate"); //播放时间改变
eventTester("ended"); //播放结束
eventTester("ratechange"); //播放速率改变
eventTester("durationchange"); //资源长度改变
eventTester("volumechange"); //音量改变